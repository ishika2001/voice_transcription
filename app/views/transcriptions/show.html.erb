<div class="container">
  <div class="header">
    <h1>📝 Transcription Details</h1>
    <div class="header-actions">
      <%= link_to "← Back to History", root_path, class: "btn btn-secondary" %>
      <%= link_to "🎤 New Transcription", transcribe_path, class: "btn btn-primary" %>
    </div>
  </div>

  <div class="transcription-detail">
    <div class="transcription-meta">
      <div class="meta-item">
        <strong>📅 Created:</strong> 
        <%= @transcription.created_at.strftime("%B %d, %Y at %I:%M %p") %>
      </div>
      
      <% if @transcription.audio_file_name %>
        <div class="meta-item">
          <strong>🎵 File:</strong> 
          <%= @transcription.audio_file_name %>
        </div>
      <% end %>
      
      <div class="meta-item">
        <strong>📊 Word Count:</strong> 
        <%= @transcription.content.split.length %> words
      </div>
    </div>

    <div class="transcription-section">
      <h2>📝 Full Transcription</h2>
      <div class="full-transcription">
        <%= simple_format(@transcription.content) %>
      </div>
      
      <button class="btn btn-copy" onclick="copyTranscription()">
        📋 Copy Full Transcription
      </button>
    </div>

    <div class="summary-section">
      <h2>✨ Summary</h2>
      <% if @transcription.has_summary? %>
        <div class="summary-content">
          <%= simple_format(@transcription.summary) %>
        </div>
        
        <button class="btn btn-copy" onclick="copySummary()">
          📋 Copy Summary
        </button>
      <% else %>
        <div class="no-summary">
          <p>No summary generated yet.</p>
          <button class="btn btn-summary" onclick="generateSummary()">
            ✨ Generate Summary
          </button>
        </div>
      <% end %>
    </div>

    <div class="actions">
      <%= link_to "🗑️ Delete Transcription", transcription_path(@transcription), 
          method: :delete, 
          confirm: "Are you sure you want to delete this transcription?", 
          class: "btn btn-delete" %>
    </div>
  </div>
</div>

<script>
function copyTranscription() {
  const text = `<%= j(@transcription.content) %>`;
  navigator.clipboard.writeText(text).then(() => {
    showCopySuccess('Transcription copied!');
  }).catch(err => {
    console.error('Failed to copy: ', err);
  });
}

function copySummary() {
  const text = `<%= j(@transcription.summary || '') %>`;
  navigator.clipboard.writeText(text).then(() => {
    showCopySuccess('Summary copied!');
  }).catch(err => {
    console.error('Failed to copy: ', err);
  });
}

async function generateSummary() {
  const button = document.querySelector('.btn-summary');
  const originalText = button.textContent;
  
  button.disabled = true;
  button.textContent = '⏳ Generating Summary...';
  
  try {
    const response = await fetch(`/transcriptions/<%= @transcription.id %>/summary`);
    const data = await response.json();
    
    if (data.summary) {
      location.reload(); // Reload to show the new summary
    } else {
      alert('Failed to generate summary: ' + (data.error || 'Unknown error'));
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to generate summary. Please try again.');
  } finally {
    button.disabled = false;
    button.textContent = originalText;
  }
}

function showCopySuccess(message) {
  // Create a temporary success message
  const successDiv = document.createElement('div');
  successDiv.className = 'copy-success';
  successDiv.textContent = message;
  successDiv.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: #10b981;
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    z-index: 1000;
    animation: slideIn 0.3s ease-out;
  `;
  
  document.body.appendChild(successDiv);
  
  // Remove after 3 seconds
  setTimeout(() => {
    successDiv.remove();
  }, 3000);
}

// Add CSS animation
const style = document.createElement('style');
style.textContent = `
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
`;
document.head.appendChild(style);
</script>