c
n
c
response.parsed_response['id']
(byebug) response
response
n
c
request_body.to_json
BASE_URL
@headers
response
n
c
response.parsed_response['id']
response.id
response
n
exit
response
n
audio_url
n
c
response
n
"#{BASE_URL}/transcript"
@headers
request_body.to_json
response = HTTParty.post(
    97:       "#{BASE_URL}/transcript",
    98:       body: request_body.to_json,
    99:       headers: @headers
   100:     )
request_body
n
audio_url
n
c
n
audio_url
n
response.parsed_response['upload_url']
response
c
n
assembly_ai
n
exit
echo $ASSEMBLYAI_API_KEY
assembly_ai
n
params
c
result
n
temp_file
assembly_ai
n
assembly_ai
n
params
exit
 response = client.audio.transcriptions(
    parameters: {
      model: "whisper-1",
      file: File.open(params[:audio].tempfile.path, "rb")
    }
  )
client.audio.transcribe(model: "whisper-1", file: file)
client.audio.transcriptions(model: "whisper-1", file: file)
response = client.audio.transcribe(
    model: "whisper-1",
    file: params[:audio].tempfile
  )
client.audio.transcribe
params[:audio].tempfile
client.audio.transcriptions
client.audio
client
n
c
response
n
client
n
params
c
n
client
n
params
